% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare.R
\name{generate_comparison_plots}
\alias{generate_comparison_plots}
\title{Generate ggbetweenstats comparison plots and summary statistics}
\usage{
generate_comparison_plots(
  data,
  category,
  Vars,
  repeat_category = NULL,
  plots = TRUE,
  table = TRUE,
  min_threshold = 0.05,
  min_subcategory = 5
)
}
\arguments{
\item{data}{A data frame containing the variables.}

\item{category}{The unquoted name of the column to be used as the
x-axis variable (e.g., `gender`). This should be a categorical variable.}

\item{Vars}{A character vector of variable names to compare against the category.
These should be column names in the data frame (e.g., c("csu", "ta", "iv", "se", "sr")).}

\item{repeat_category}{The unquoted name of an optional column. If provided,
separate analyses will be performed for each unique level of this column.
Categories with less than 5% of the total data will be automatically excluded.
(e.g., `source`). This should be a categorical variable. Defaults to `NULL`.}

\item{plots}{Logical. If TRUE, generates and displays plots. Defaults to TRUE.}

\item{table}{Logical. If TRUE, generates and displays a summary table. Defaults to TRUE.}

\item{min_threshold}{Numeric. Minimum percentage threshold (as decimal) for including
repeat_category groups. Defaults to 0.05 (5%). Only applies when repeat_category is specified.}

\item{min_subcategory}{Numeric. Minimum number of observations required for each
subcategory within repeat_category groups. Defaults to 5. Categories with fewer
observations will be excluded from analysis within each repeat_category group.}
}
\value{
A list containing:
  - If no repeat_category: plots, grid_plot, summary_table, summary_data
  - If repeat_category: named list with results for each repeat category level (above threshold)
}
\description{
This function creates a series of `ggbetweenstats` plots to compare a
primary `category` across any set of comparison variables defined by `Vars`.
When a `repeat_category` is provided, the function runs separate analyses
for each unique level, automatically excluding categories that represent
less than 5% of the total data to avoid analyzing many small categories.
}
\examples{
# Create some dummy data for demonstration
Tokens <- data.frame(
  gender = sample(c("Male", "Female"), 100, replace = TRUE),
  csu = rnorm(100, mean = c(5, 7)[factor(sample(c("Male", "Female"), 100, replace = TRUE))]),
  ta = rnorm(100, mean = c(10, 12)[factor(sample(c("Male", "Female"), 100, replace = TRUE))]),
  iv = rnorm(100, mean = c(3, 4)[factor(sample(c("Male", "Female"), 100, replace = TRUE))]),
  se = rnorm(100, mean = c(8, 9)[factor(sample(c("Male", "Female"), 100, replace = TRUE))]),
  sr = rnorm(100, mean = c(6, 6.5)[factor(sample(c("Male", "Female"), 100, replace = TRUE))]),
  source = sample(c("A", "B", "C", "D", "E"), 100, replace = TRUE, prob = c(0.4, 0.3, 0.2, 0.08, 0.02))
)

# Example 1: Generate both plots and table (no repeat category)
results <- generate_comparison_plots(
  data = Tokens,
  category = gender,
  Vars = c("csu", "ta", "iv", "se", "sr"),
  plots = TRUE,
  table = TRUE
)

# Example 2: Generate with repeat category (separate analysis per source)
# Categories with < 5\% of data will be automatically excluded
results_by_source <- generate_comparison_plots(
  data = Tokens,
  category = gender,
  Vars = c("csu", "ta", "iv"),
  repeat_category = source,
  plots = TRUE,
  table = TRUE
)

# Example 3: Different variables for psychological measures
psych_data <- data.frame(
  group = sample(c("Control", "Treatment"), 100, replace = TRUE),
  anxiety = rnorm(100, mean = c(3, 2)[factor(sample(c("Control", "Treatment"), 100, replace = TRUE))]),
  depression = rnorm(100, mean = c(2, 1.5)[factor(sample(c("Control", "Treatment"), 100, replace = TRUE))]),
  stress = rnorm(100, mean = c(4, 3)[factor(sample(c("Control", "Treatment"), 100, replace = TRUE))])
)

results_psych <- generate_comparison_plots(
  data = psych_data,
  category = group,
  Vars = c("anxiety", "depression", "stress"),
  plots = TRUE,
  table = TRUE
)
}
